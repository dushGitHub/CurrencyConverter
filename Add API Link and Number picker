//URI for the API
	String url = "http://www.apilayer.net/api/live?access_key=fa&currencies=AUD,USD,JPY,SGD,EUR,NZD,LKR,MYR&format=1";
	
  @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    // setup the number picker 
        firstNP.setDisplayedValues(currVal);
        firstNP.setMinValue(0);
        firstNP.setMaxValue(7);
        firstNP.setWrapSelectorWheel(true);
        firstNP.setBackgroundColor(Color.parseColor("#6495ED"));
        
        secNP.setDisplayedValues(currVal);
        secNP.setMinValue(0);
        secNP.setMaxValue(7);
        secNP.setWrapSelectorWheel(true);
        secNP.setBackgroundColor(Color.parseColor("#00BFFF"));
        
    //First number picker
       firstNP.setOnValueChangedListener(new OnValueChangeListener() {
    	   @Override
    	   public void onValueChange(NumberPicker picker, int oldVal, int newVal) {   		       		   
    		   txtCurrName.setText(" ");
    		   
    		   //check edit text is empty before pass the value
    		   if(TextUtils.isEmpty(enteredVal.getText().toString())){
    			   MessageBox("Please enter the Currency Value");
    			   return;
    		   }else{
    			   myInput = Double.parseDouble(enteredVal.getText().toString());
    		   }
    		      		   
				switch(newVal){
				case 0 : 
					txtCurrName.setText(currName[0]);
					firstSpinnerVal = audValue;
			
					break;
				case 1 : 
					txtCurrName.setText(currName[1]);
					firstSpinnerVal = usdValue;
					break;
				case 2 : 
					txtCurrName.setText(currName[2]);
					firstSpinnerVal = jpyValue;				
					break;
				case 3 : 
					txtCurrName.setText(currName[3]);
					firstSpinnerVal = sgdValue;
					break;
				case 4 : 
					txtCurrName.setText(currName[4]);
					firstSpinnerVal = eurValue;
					break;
				case 5 : 
					txtCurrName.setText(currName[5]);
					firstSpinnerVal = nzdValue;				
					break;
				case 6 : 
					txtCurrName.setText(currName[6]);
					firstSpinnerVal = lkrValue;
					break;
				case 7 : 
					txtCurrName.setText(currName[7]);
					firstSpinnerVal = myrValue;
					break;
				} // switch	
				myResult = Calculate(myInput, firstSpinnerVal, secSpinnerVal);
				txtResult.setText(Double.toString(myResult));
				np1Val = newVal;
			} //onValueChange
		});//end first NP
    
    //Function to save currency data
    public void writeToFile(String data) {
        try {
        	FileOutputStream fileout = openFileOutput("CurrencyData.txt", MODE_PRIVATE);
        	OutputStreamWriter outputWriter = new OutputStreamWriter(fileout);
        	outputWriter.write(data);
        	outputWriter.close();
        	 
        	//display file saved message      	
        	MessageBox("New Currency Data Saved Successfully");
        	
        }
        catch (IOException e) {
        	MessageBox(e.toString());
        	e.printStackTrace();
        } 
    }
    
        
        
